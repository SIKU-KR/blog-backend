name: CI/CD

on:
  pull_request:
    branches: [ main, master ]
    types: [ closed ]

jobs:
  run-on-merge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Notify
        run: echo "âœ… PR has been merged!"

  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test

  build-and-push:
    if: github.event.pull_request.merged == true
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Convert repository name to lowercase
        id: repo_name
        run: echo "REPO_LC=ghcr.io/$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REPO_LC }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,format=short
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    if: github.event.pull_request.merged == true
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Convert repository name to lowercase for deployment
        run: |
          echo "IMAGE=ghcr.io/$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]'):latest" >> $GITHUB_ENV

      - name: Deploy via SSH with GHCR login
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            docker pull ${{ env.IMAGE }}
            docker stop blog-backend || true
            docker rm blog-backend || true

            docker run -d \
              --name blog-backend \
              -p 8080:8080 \
              --restart unless-stopped \
              -e SPRING_APPLICATION_NAME=bumsiku \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e SPRING_DATASOURCE_URL="${{ secrets.SPRING_DATASOURCE_URL }}" \
              -e SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver \
              -e SPRING_DATASOURCE_USERNAME="${{ secrets.SPRING_DATASOURCE_USERNAME }}" \
              -e SPRING_DATASOURCE_PASSWORD="${{ secrets.SPRING_DATASOURCE_PASSWORD }}" \
              -e SPRING_JPA_HIBERNATE_DDL_AUTO=update \
              -e SPRING_JPA_OPEN_IN_VIEW=false \
              -e SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true \
              -e SPRING_JPA_SHOW_SQL=true \
              -e SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MySQL8Dialect \
              -e ADMIN_PASSWORD="${{ secrets.ADMIN_PASSWORD }}" \
              -e SERVER_SERVLET_SESSION_TIMEOUT=1h \
              -e SERVER_SERVLET_SESSION_COOKIE_SECURE=true \
              -e SPRINGDOC_PACKAGES_TO_SCAN=park.bumsiku.controller \
              -e SPRINGDOC_API_INFO_TITLE="Bumsiku Blog API" \
              -e SPRINGDOC_API_INFO_VERSION=v1.0.0 \
              -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_CREDENTIALS_ACCESS_KEY }}" \
              -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_CREDENTIALS_SECRET_KEY }}" \
              -e AWS_REGION=ap-northeast-2 \
              -e AWS_STACK_AUTO=false \
              -e AWS_S3_BUCKET="${{ secrets.AWS_S3_BUCKET }}" \
              -e AWS_S3_BUCKET_URL="${{ secrets.AWS_S3_BUCKET_URL }}" \
              ${{ env.IMAGE }}